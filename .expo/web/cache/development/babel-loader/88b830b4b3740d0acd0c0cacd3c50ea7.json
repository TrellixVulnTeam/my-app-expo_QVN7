{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport { Box, Center, FlatList } from \"native-base\";\nimport ApiFeed from \"../Api/ApiFeed\";\nimport AppCard from \"../Components/AppCard\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction FeedScreen() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      myJson = _useState2[0],\n      setMyJson = _useState2[1];\n\n  var renderItem = function renderItem(_ref) {\n    var item = _ref.item;\n    return _jsx(AppCard, {\n      title: item.title\n    });\n  };\n\n  var postApi = function postApi() {\n    var result;\n    return _regeneratorRuntime.async(function postApi$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ApiFeed.get(\"/posts\"));\n\n          case 2:\n            result = _context.sent;\n            console.log(result.data, \"halo\");\n            return _context.abrupt(\"return\", setMyJson(result.data));\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    postApi();\n  }, []);\n  return _jsx(Box, {\n    children: _jsx(Center, {\n      children: _jsx(FlatList, {\n        data: myJson,\n        renderItem: renderItem,\n        keyExtractor: function keyExtractor(item) {\n          return item.id;\n        }\n      })\n    })\n  });\n}\n\nexport default FeedScreen;","map":{"version":3,"sources":["/Users/GUEST1/Documents/my-app-expo/src/Screens/FeedScreen.js"],"names":["React","useEffect","useState","Box","Center","FlatList","ApiFeed","AppCard","FeedScreen","myJson","setMyJson","renderItem","item","title","postApi","get","result","console","log","data","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,QAAtB,QAAsC,aAAtC;AAEA,OAAOC,OAAP;AACA,OAAOC,OAAP;;;AAEA,SAASC,UAAT,GAAsB;AACpB,kBAA4BN,QAAQ,CAAC,EAAD,CAApC;AAAA;AAAA,MAAOO,MAAP;AAAA,MAAeC,SAAf;;AAEA,MAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA,QAAGC,IAAH,QAAGA,IAAH;AAAA,WAAc,KAAC,OAAD;AAAS,MAAA,KAAK,EAAEA,IAAI,CAACC;AAArB,MAAd;AAAA,GAAnB;;AAEA,MAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACOR,OAAO,CAACS,GAAR,CAAY,QAAZ,CADP;;AAAA;AACRC,YAAAA,MADQ;AAEdC,YAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,IAAnB,EAAyB,MAAzB;AAFc,6CAGPT,SAAS,CAACM,MAAM,CAACG,IAAR,CAHF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAMAlB,EAAAA,SAAS,CAAC,YAAM;AACda,IAAAA,OAAO;AACR,GAFQ,EAEN,EAFM,CAAT;AAIA,SACE,KAAC,GAAD;AAAA,cACE,KAAC,MAAD;AAAA,gBACE,KAAC,QAAD;AACE,QAAA,IAAI,EAAEL,MADR;AAEE,QAAA,UAAU,EAAEE,UAFd;AAGE,QAAA,YAAY,EAAE,sBAACC,IAAD;AAAA,iBAAUA,IAAI,CAACQ,EAAf;AAAA;AAHhB;AADF;AADF,IADF;AAWD;;AAED,eAAeZ,UAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Box, Center, FlatList } from \"native-base\";\n\nimport ApiFeed from \"../Api/ApiFeed\";\nimport AppCard from \"../Components/AppCard\";\n\nfunction FeedScreen() {\n  const [myJson, setMyJson] = useState([]);\n\n  const renderItem = ({ item }) => <AppCard title={item.title} />;\n\n  const postApi = async () => {\n    const result = await ApiFeed.get(\"/posts\");\n    console.log(result.data, \"halo\");\n    return setMyJson(result.data);\n  };\n\n  useEffect(() => {\n    postApi();\n  }, []);\n\n  return (\n    <Box>\n      <Center>\n        <FlatList\n          data={myJson}\n          renderItem={renderItem}\n          keyExtractor={(item) => item.id}\n        />\n      </Center>\n    </Box>\n  );\n}\n\nexport default FeedScreen;\n"]},"metadata":{},"sourceType":"module"}